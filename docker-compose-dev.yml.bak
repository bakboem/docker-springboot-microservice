
version: '3.9'
services:
  maindb:
    build:
      context: ./backend/nocode-standalone-instance/db/main-db
    container_name: ecm-main-db
    profiles:
      - standalone
    env_file:
      - ./backend/nocode-standalone-instance/db/main-db/.env
    ports:
      - "5432:5432"
    volumes:
      - ecm-main-db-data-dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codera-user -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    build:
     context: ./backend/nocode-standalone-instance/db/redis
    container_name: ecm-redis
    profiles:
      - standalone
    env_file:
      - ./backend/nocode-standalone-instance/db/redis/.env
    ports:
      - "6379:6379"
    volumes:
      - ecm-redis-data-dev:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s  
    restart: always

  kafka:
    build:
      context: ./backend/nocode-standalone-instance/kafka
    container_name: ecm-kafka
    profiles:
      - standalone
    env_file:
      - ./backend/nocode-standalone-instance/kafka/.env
    ports:
      - "9092:9092"
    volumes:
      - ecm-kafka-data-dev:/??
    healthcheck:
      test: []
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s  
    restart: always

  grafana:
    build:
      context: ./backend/nocode-standalone-instance/monitoring/grafana/
    container_name: ecm-grafana
    profiles:
      - standalone
    env_file:
      - ./backend/nocode-standalone-instance/db/monitoring/grafana/.env
    ports:
      - "3000:3000"
    volumes:
      - ./backend/nocode-standalone-instance/db/monitoring/grafana/grafana_public_key.pem:/etc/grafana/grafana_public_key.pem
      - ecm-grafana-data-dev:/var/lib/grafana  
      - ./backend/nocode-standalone-instance/db/monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml  
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3000 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3

  influx:
    build:
      context: ./backend/nocode-standalone-instance/monitoring/influx
    container_name: ecm-influx
    profiles:
      - standalone
    env_file:
      - ./backend/nocode-standalone-instance/db/monitoring/influx/.env
    ports:
      - "8086:8086"
    volumes:
      - ecm-influx-metadata-dev:/root/.influxdbv2
      - ecm-influx-data-dev:/var/lib/influxdb2
      - ./influx/:/etc/influxdb2
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s


  prometheus:
    build:
      context: ./backend/nocode-standalone-instance/monitoring/prometheus
    container_name: ecm-prometheus
    profiles:
      - standalone
    env_file:
      - ./backend/nocode-standalone-instance/monitoring/prometheus/.env
    ports:
      - "9090:9090"
    volumes:
      - ./backend/nocode-standalone-instance/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9090 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3

  log:
    build:
      context: ./backend/nocode-standalone-instance/log
    container_name: ecm-log
    profiles:
      - standalone
    env_file:
      - ./backend/nocode-standalone-instance/log/.env
    ports:
      - "5438:5432"
    volumes:
      - ecm-log-data-dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codera-log -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    
volumes:
  ecm-main-db-data-dev:
  ecm-redis-data-dev:
  ecm-kafka-data-dev:
  ecm-grafana-data-dev:
  ecm-influx-data-dev:
  ecm-influx-metadata-dev:
  ecm-log-data-dev: